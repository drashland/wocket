name-template: 'v$RESOLVED_VERSION'
tag-template: 'v$RESOLVED_VERSION'

change-template: '- $TITLE (#$NUMBER)'

# Only add to the draft release when a PR has one of these labels
include-labels:
  - 'Type: Major'
  - 'Type: Minor'
  - 'Type: Patch'
  - 'Type: Chore'

# Here is how we determine what version the release would be, by using labels. Eg when "minor" is used, the drafter knows to bump up to a new minor version
version-resolver:
  major:
    labels:
      - 'Type: Major'
  minor:
    labels:
      - 'Type: Minor'
  patch:
    labels:
      - 'Type: Patch'
      - 'Type: Chore' # allow our chore PR's to just be patches too
  default: patch

# What our release will look like. If no draft has been created, then this will be used, otherwise $CHANGES just gets addedd
template: |
  __Compatibility__

  * Requires Deno v<DENO_VERSION> or higher
  * Uses Deno std@<STD_VERSION>

  __Importing__

  * Import this latest release by using the following in your project(s):
    ```typescript
    import { Server } from "https://deno.land/x/wocket@v$RESOLVED_VERSION/mod.ts"; // Deno, server side
    import WocketClient from "https://cdn.jsdelivr.net/gh/drashland/wocket-client@$RESOLVED_VERSION/client.js"; // Browser, client side
    import WocketClient from "https://deno.land/x/wocket@v$RESOLVEDD_VERSION/client.ts"; // Deno, server side if using a client on the server
    ```

  __Updates__

  $CHANGES
